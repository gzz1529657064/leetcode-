给定一个字符串，你需要反转字符串中每个单词的字符顺序，同时仍保留空格和单词的初始顺序。

输入: "Let's take LeetCode contest"
输出: "s'teL ekat edoCteeL tsetnoc" 

我的答案(未做正确):
class Solution {
public:
    string reverseWords(string s) {
        for (int i = 0; i < s.size(); ++i)
        {
            int block = 0;
            if (s[i] == ' ')
            {
                for (int j = block; j < (i+block)/2; ++j)
                {
                    int temp = s[j];
                    s[j] = s[i-j+block-1];
                    s[i-j+block-1] = temp;  
                    
                }
                block = i + 1;
            }
            
        }
        return s; 
    }
};

我的思路已经对了，但是我没想到最后一个单词

和我思路相同的C++代码:
class Solution {
public:
    string reverseWords(string s) {
        if (s.empty())
        {
            return "";
        }
        int len = s.size();
        int start = 0;   // 单词开始的位置
        for (int i = 0; i < len; ++i)
        {
            if (s[i] == ' ')   // 若出现空格，则逆转之前的单词
            {
                int mid = (start + i) / 2;
                for (int j = start; j < mid; ++j)
                {
                    char temp = s[j];
                    s[j] = s[i-j+start-1];
                    s[i-j+start-1] = temp;
                }
                start = i + 1;
            }
        }
        int mid = (start + len) / 2;      // 逆转最后一个单词
        for (int k = start; k < mid; ++k)
        {
            char temp = s[k];
            s[k] = s[len-k+start-1];
            s[len-k+start-1] = temp;
        }
        return s;
    }
};

C++:
class Solution {
public:
    string reverseWords(string s) {
        int flag1 = 0;
        int flag2 = 0;
        while(flag2 < s.length()){
            if((flag2 == s.length() - 1) || (s[flag2 + 1] == ' ')){
                int left = flag1;
                int right = flag2;
                while(left < right){
                    char tmp = s[left];
                    s[left] = s[right];
                    s[right] = tmp;
                    left++;
                    right--;
                }
                flag1 = flag2 + 2;
            }
            flag2++;
        }
        return s;
    }
};

Python3:
class Solution:
    def reverseWords(self, s: str) -> str:
    	# 将字符串按空格分，把字符串分成一个一个单词
        a = s.split(" ")
        l = []
        # 把每个单词反转
        for i in a:
            l.append(i[::-1])
        # 将反转后的单词用空格连接起来
        s = " ".join(l)
        return s
